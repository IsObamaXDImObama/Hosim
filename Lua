local UserInputService = game:GetService("UserInputService")

local HttpService = game:GetService("HttpService")

local Library = {}

function Library:CreateWindow(windowtitle)
	local HosimUIByJerio = Instance.new("ScreenGui")
	
	local ambientShadow = Instance.new("ImageLabel")
	
	local Window = Instance.new("Frame")
	
	local LeftWindow = Instance.new("Frame")
	
	local Top = Instance.new("Frame")
	
	local Logo = Instance.new("ImageLabel")
	
	local WindowTitle = Instance.new("TextLabel")
	
	local TabWindow = Instance.new("Frame")
	
	local TabWindowUIGrid = Instance.new("UIGridLayout")
	
	local Category = Instance.new("Frame")
	
	HosimUIByJerio.Name = HttpService:GenerateGUID(true)
	HosimUIByJerio.Parent = game.CoreGui
	HosimUIByJerio.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

	ambientShadow.Name = "ambientShadow"
	ambientShadow.Parent = HosimUIByJerio
	ambientShadow.AnchorPoint = Vector2.new(0.5, 0.5)
	ambientShadow.BackgroundTransparency = 1.000
	ambientShadow.BorderSizePixel = 0
	ambientShadow.Position = UDim2.new(0, 793, 0, 419)
	ambientShadow.Size = UDim2.new(0, 760, 0, 510)
	ambientShadow.ZIndex = -1
	ambientShadow.Image = "rbxassetid://1316045217"
	ambientShadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
	ambientShadow.ImageTransparency = 0.500
	ambientShadow.ScaleType = Enum.ScaleType.Slice
	ambientShadow.SliceCenter = Rect.new(10, 10, 118, 118)

	Window.Name = "Window"
	Window.Parent = ambientShadow
	Window.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Window.Position = UDim2.new(0, 10, 0, 10)
	Window.Size = UDim2.new(0, 740, 0, 490)

	LeftWindow.Name = "LeftWindow"
	LeftWindow.Parent = Window
	LeftWindow.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	LeftWindow.BorderSizePixel = 0
	LeftWindow.Size = UDim2.new(0, 110, 0, 490)

	Top.Name = "Top"
	Top.Parent = LeftWindow
	Top.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	Top.BorderSizePixel = 0
	Top.Size = UDim2.new(0, 110, 0, 70)

	Logo.Name = "Logo"
	Logo.Parent = Top
	Logo.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	Logo.BackgroundTransparency = 1.000
	Logo.BorderSizePixel = 0
	Logo.Position = UDim2.new(0.363636374, 0, 0, 0)
	Logo.Size = UDim2.new(0, 30, 0, 30)
	Logo.Image = "rbxassetid://7645815809"

	WindowTitle.Name = "WindowTitle"
	WindowTitle.Parent = Top
	WindowTitle.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
	WindowTitle.BackgroundTransparency = 1.000
	WindowTitle.BorderSizePixel = 0
	WindowTitle.Position = UDim2.new(0.0454545468, 0, 0.428571433, 0)
	WindowTitle.Size = UDim2.new(0, 100, 0, 30)
	WindowTitle.Font = Enum.Font.GothamBlack
	WindowTitle.Text = windowtitle or "Window Title Here"
	WindowTitle.TextColor3 = Color3.fromRGB(200, 200, 200)
	WindowTitle.TextSize = 14.000
	WindowTitle.TextWrapped = true
	WindowTitle.TextYAlignment = Enum.TextYAlignment.Top

	TabWindow.Name = "TabWindow"
	TabWindow.Parent = LeftWindow
	TabWindow.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
	TabWindow.BorderSizePixel = 0
	TabWindow.Position = UDim2.new(0, 0, 0, 70)
	TabWindow.Size = UDim2.new(0, 110, 0, 420)
	
	TabWindowUIGrid.Name = "TabWindowUIGrid"
	TabWindowUIGrid.Parent = TabWindow
	TabWindowUIGrid.SortOrder = Enum.SortOrder.LayoutOrder
	TabWindowUIGrid.CellSize = UDim2.new(0, 110, 0, 25)
	
	Category.Name = "Category"
	Category.Parent = Window
	Category.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
	Category.BorderSizePixel = 0
	Category.Position = UDim2.new(0, 115, 0, 5)
	Category.Size = UDim2.new(0, 620, 0, 480)

	local gui = ambientShadow

	local dragging
	local dragInput
	local dragStart
	local startPos

	local function update(input)
		local delta = input.Position - dragStart
		gui.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end

	gui.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			dragging = true
			dragStart = input.Position
			startPos = gui.Position

			input.Changed:Connect(function()
				if input.UserInputState == Enum.UserInputState.End then
					dragging = false
				end
			end)
		end
	end)

	gui.InputChanged:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
			dragInput = input
		end
	end)

	UserInputService.InputChanged:Connect(function(input)
		if input == dragInput and dragging then
			update(input)
		end
	end)
	
	
	-- Window End
	
	
	
	local Window = {}
	
	function Window:CreateTab(tabcategoryname)
		
		local TabButton = Instance.new("TextButton")
		
		local Page = Instance.new("Frame")
		
		local PageUiGrid = Instance.new("UIGridLayout")
		
		TabButton.Name = "TabButton"
		TabButton.Parent = TabWindow
		TabButton.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
		TabButton.BackgroundTransparency = 1.000
		TabButton.BorderSizePixel = 0
		TabButton.Size = UDim2.new(0, 110, 0, 25)
		TabButton.Font = Enum.Font.GothamSemibold
		TabButton.Text = tabcategoryname or "Page"
		TabButton.TextColor3 = Color3.fromRGB(150, 150, 150)
		TabButton.TextSize = 12.000

		Page.Name = tabcategoryname or "Page"
		Page.Parent = Category
		Page.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
		Page.BackgroundTransparency = 1.000
		Page.BorderSizePixel = 0
		Page.Size = UDim2.new(0, 620, 0, 480)
		
		PageUiGrid.Name = "PageUiGrid"
		PageUiGrid.Parent = Page
		PageUiGrid.SortOrder = Enum.SortOrder.LayoutOrder
		PageUiGrid.CellPadding = UDim2.new(0, 10, 0, 10)
		PageUiGrid.CellSize = UDim2.new(0, 300, 0, 15)
		
		local function HDIRC_fake_script() -- TabButton.TabButtonScript 
			local script = Instance.new('LocalScript', TabButton)

			script.Parent.MouseButton1Click:Connect(function()
				for _, tabbutton in pairs(script.Parent.Parent:GetChildren()) do
					if tabbutton:IsA("TextButton") then
						tabbutton.TextColor3 = Color3.fromRGB(150, 150, 150)
					end
				end
				script.Parent.TextColor3 = Color3.fromRGB(220, 220, 220)
				for _, page in pairs(script.Parent.Parent.Parent.Parent.Category:GetChildren()) do
					if page:IsA("Frame") then
						page.Visible = false
					end
				end
				wait(0.05)
				script.Parent.Parent.Parent.Parent.Category[script.Parent.Text].Visible = true
			end)
		end
		coroutine.wrap(HDIRC_fake_script)()
		
	end
end

return Library
